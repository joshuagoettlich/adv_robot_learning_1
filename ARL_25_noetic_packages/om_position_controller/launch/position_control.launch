<?xml version="1.0" ?>
<launch>
  <arg name="sim" default="false"/>
  <arg name="usb_port" default="/dev/ttyUSB0" />
  <arg name="use_rs" default="false" />

  <!-- Load controller configurations based on simulation or real robot -->
  <group if="$(arg sim)">
    <!-- Load Gazebo-specific controller configurations -->
    <rosparam file="$(find om_position_controller)/config/gazebo_controllers.yaml" command="load" />
  </group>

  <group unless="$(arg sim)">
    <!-- Load real robot controller configurations -->
    <rosparam file="$(find om_position_controller)/config/position_controller.yaml" command="load"/>
  </group>

  <!-- Real robot hardware interface -->
  <group unless="$(arg sim)">
    <include file="$(find open_manipulator_hw)/launch/open_manipulator_control.launch">
      <arg name="usb_port" value="$(arg usb_port)"/>
      <arg name="interface" value="position"/>
    </include>
  </group>

  <!-- Simulation: startup simulated world and spawn robot -->
  <group if="$(arg sim)">
    <include file="$(find open_manipulator_hw)/launch/open_manipulator_gazebo.launch"/>
  </group>

  <!-- Controller utils (common for both sim and real) -->
  <include file="$(find open_manipulator_hw)/launch/controller_utils.launch"/>

  <!-- Joint state publisher for simulation -->
  <group if="$(arg sim)">
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <rosparam param="source_list">[/open_manipulator_6dof/joint_states]</rosparam>
    </node>
  </group>

  <!-- Spawn controllers -->
  <group if="$(arg sim)">
    <!-- For Gazebo simulation - note the namespace -->
    <node name="arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" 
          output="screen" ns="open_manipulator_6dof" args="joint_state_controller arm_controller gripper_controller"/>
  </group>

  <group unless="$(arg sim)">
    <!-- For real robot -->
    <node name="arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" 
          output="screen" args="position_controller"/>
  </group>

  <!-- RealSense camera (only for real robot when use_rs is true) -->
  <group unless="$(arg sim)">
    <group if="$(arg use_rs)">
      <include file="$(find realsense2_camera)/launch/rs_camera.launch">
        <arg name="enable_pointcloud" value="false" />
        <arg name="align_depth" value="true" />
      </include>

      <node pkg="tf" type="static_transform_publisher" name="camera_frame_to_realsense_frame"
            args="-0.070 0 0.052 0 0 0 link7 camera_link 10" />

      <node pkg="tf" type="static_transform_publisher" name="camera_color_frame_publisher"
            args="0 0 0 -1.57 0 0 camera_color_frame camera_color_frame_calib 10" />
    </group>
  </group>

</launch>